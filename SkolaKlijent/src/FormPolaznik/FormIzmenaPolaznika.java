/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FormPolaznik;

import FormPolaznik.*;
import controller.ClientController;
import domain.Grupa;
import domain.Polaznik;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author Neon
 */
public class FormIzmenaPolaznika extends javax.swing.JDialog {

    /**
     * Creates new form FormIzmenaPredavaca
     */
    private Polaznik p;

    public FormIzmenaPolaznika(JDialog parent, boolean modal, Polaznik p) {
        super(parent, modal);
        initComponents();
        this.p = p;
        setLocationRelativeTo(null);
        vratiGrupe();
        lblPolaznik.setText("PolaznikID: " + String.valueOf(p.getPolaznikID()));
        txtIme.setText(p.getIme());
        txtPrezime.setText(p.getPrezime());
        txtTelefon.setText(p.getTelefon());
        txtEmail.setText(p.getEmail());
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        txtDatumUpisivanja.setText(sdf.format(p.getDatumUpisivanja()));
        cbGrupa.setSelectedItem(p.getGrupa());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        btnOtkazi = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        txtPrezime = new javax.swing.JTextField();
        btnObrisi = new javax.swing.JButton();
        lblPolaznik = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtTelefon = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDatumUpisivanja = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbGrupa = new javax.swing.JComboBox();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnOtkazi.setText("Otkazi");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        jLabel4.setText("Ime:");

        jLabel5.setText("Prezime:");

        btnObrisi.setText("Obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        lblPolaznik.setText("PolaznikID");

        jLabel8.setText("Telefon:");

        jLabel1.setText("Email:");

        jLabel2.setText("Datum upisivanja: (dd.MM.yyyy)");

        jLabel3.setText("Grupa:");

        cbGrupa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOtkazi, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnIzmeni, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPolaznik)
                            .addComponent(jLabel4)
                            .addComponent(jLabel8)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1))
                        .addGap(143, 143, 143)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrezime, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTelefon, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtEmail)
                            .addComponent(txtIme)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDatumUpisivanja)
                            .addComponent(cbGrupa, 0, 320, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPolaznik)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDatumUpisivanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbGrupa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOtkazi)
                    .addComponent(btnObrisi)
                    .addComponent(btnIzmeni))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        if (txtIme.getText().isEmpty() || txtPrezime.getText().isEmpty()
                || txtEmail.getText().isEmpty() || txtTelefon.getText().isEmpty()
                || txtDatumUpisivanja.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sva polja moraju biti popunjena!");
            return;
        }

        String ime = txtIme.getText();
        String prezime = txtPrezime.getText();
        String telefon = txtTelefon.getText();
        String email = txtEmail.getText();
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");

        if (!email.endsWith(".com") && !email.endsWith(".rs")) {
            JOptionPane.showMessageDialog(this, "Email mora biti u odgovarajucem formatu!");
            return;
        }
        if (!email.contains("@")) {
            JOptionPane.showMessageDialog(this, "Email mora biti u odgovarajucem formatu!");
            return;
        }

        try {
            int tel = Integer.parseInt(telefon);
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Telefon mora biti unet bez +,- i slicno. Primer: 0615010235");
            return;
        }
        try {
            Date datumUpisivanja = sdf.parse(txtDatumUpisivanja.getText());
            //validacija za datum:
            if (datumUpisivanja.after(new Date())) {
                JOptionPane.showMessageDialog(this, "Datum upisa moze biti najkasnije danas.");
                return;
            }

            Grupa grupa = (Grupa) cbGrupa.getSelectedItem();

            Polaznik polaznik = new Polaznik(p.getPolaznikID(), ime, prezime, telefon, email, datumUpisivanja, grupa);

            ArrayList<Polaznik> listaPolaznika = ClientController.getInstance().getAllPolaznik();

            for (Polaznik p : listaPolaznika) {
                if (polaznik.equals(p)) {
                    if(polaznik.getPolaznikID() == p.getPolaznikID()){
                        break;
                    }
                    JOptionPane.showMessageDialog(this, "Polaznik vec postoji!");
                    return;
                }
            }

            try {
                ClientController.getInstance().editPolaznik(polaznik);
                JOptionPane.showMessageDialog(this, "Uspesno izmenjen polaznik.");
                this.dispose();
            } catch (Exception ex) {
                Logger.getLogger(FormIzmenaPolaznika.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Datum mora biti u formatu dd.MM.yyyy");
            return;
        } catch (Exception ex) {
            Logger.getLogger(FormIzmenaPolaznika.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed

        int result = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da "
                + "obrisete polaznika?", "Potvrda", JOptionPane.YES_NO_OPTION);

        if (result == JOptionPane.NO_OPTION) {
            return;
        }

        if (result == JOptionPane.YES_OPTION) {
            try {                
                ClientController.getInstance().deletePolaznik(p);
                JOptionPane.showMessageDialog(this, "Uspesno obrisan polaznik!");
                this.dispose();
            } catch (Exception ex) {
                Logger.getLogger(FormIzmenaPolaznika.class.getName()).log(Level.SEVERE, null, ex);
            }
//            JOptionPane.showMessageDialog(this, "Uspesno obrisan polaznik!");
//            this.dispose();
        }


    }//GEN-LAST:event_btnObrisiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormIzmenaPolaznika.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormIzmenaPolaznika.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormIzmenaPolaznika.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormIzmenaPolaznika.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JComboBox cbGrupa;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblPolaznik;
    private javax.swing.JTextField txtDatumUpisivanja;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtIme;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPrezime;
    private javax.swing.JTextField txtTelefon;
    // End of variables declaration//GEN-END:variables

    private void vratiGrupe() {
        ArrayList<Grupa> listaGrupa = new ArrayList<>();

        try {
            listaGrupa = ClientController.getInstance().getAllGrupa();
            cbGrupa.removeAllItems();

            for (Grupa grupa : listaGrupa) {
                cbGrupa.addItem(grupa);
            }

        } catch (Exception ex) {
            Logger.getLogger(FormNoviPolaznik.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
